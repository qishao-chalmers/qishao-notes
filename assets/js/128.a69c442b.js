(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{581:function(e,t,a){"use strict";a.r(t);var s=a(9),o=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"leakge-current-moore-s-law-meets-static-power"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#leakge-current-moore-s-law-meets-static-power"}},[e._v("#")]),e._v(" Leakge Current Moore's Law Meets Static Power")]),e._v(" "),t("p",[e._v("Off-state leakage is static power, current that leaks through transistors even when they are turned off.")]),e._v(" "),t("ul",[t("li",[e._v("It is one of two principal sources of power dissipation in today’s microprocessors.")]),e._v(" "),t("li",[e._v("The other is dynamic power, which arises from the repeated capacitance charge and discharge on the output of the hundreds of millions of gates in today’s chips.\n"),t("ul",[t("li",[e._v("subthreshold leakage, a weak inversion current across the device; and")]),e._v(" "),t("li",[e._v("gate leakage, a tunneling current through the gate oxide insulation.")])])])]),e._v(" "),t("p",[e._v("Dynamic power is proportional to the square of supply voltage, so reducing the voltage significantly reduces power consumption.")]),e._v(" "),t("p",[e._v("Unfortunately, smaller geometries exacerbate leakage, so static power begins to dominate the power consumption equation in microprocessor design.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/user-attachments/assets/425a5835-590f-4415-96ec-e549e7b57d3f",alt:"image"}})]),e._v(" "),t("h3",{attrs:{id:"power-basics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#power-basics"}},[e._v("#")]),e._v(" Power Basics")]),e._v(" "),t("h4",{attrs:{id:"operating-frequency-and-volatage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#operating-frequency-and-volatage"}},[e._v("#")]),e._v(" Operating Frequency and volatage")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/user-attachments/assets/98eb3e6f-53d7-4e9a-84b9-d7bf5fe08995",alt:"image"}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/user-attachments/assets/6898c71c-4dbd-418d-8570-09cbda83248a",alt:"image"}})]),e._v(" "),t("p",[e._v("we see that f = 0 corresponds to Vnorm = Vth / Vmax, which for today’s technology is approximately 0.3.")]),e._v(" "),t("p",[e._v("Reducing the operating frequency by a particular percentage from fmax will reduce the operating voltage by a smaller percentage.")]),e._v(" "),t("h3",{attrs:{id:"overall-power-consumption"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overall-power-consumption"}},[e._v("#")]),e._v(" Overall Power Consumption")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/user-attachments/assets/108c42d9-b548-40c4-9836-8c8e4a5a367e",alt:"image"}})]),e._v(" "),t("ul",[t("li",[e._v("The first term is the dynamic power lost from charging and discharging the processor’s capacitive loads: A is the fraction of gates actively switching and C is the total capacitance load of all gates.")]),e._v(" "),t("li",[e._v("The second term models the static power lost due to leakage current, Ileak.")])]),e._v(" "),t("p",[e._v("In fact, halving the voltage will reduce the power consumption by a factor of four. But Equation 2 shows that halving the voltage will reduce the processor’s maximum operating frequency by more than half.")]),e._v(" "),t("p",[e._v("To compensate for this performance loss, we can use either parallel or pipelined implementations.")]),e._v(" "),t("p",[e._v("If the implementation runs the original serial computation as two parallel subtasks or as two pipelined subtasks, the dynamic power consumption can decrease by more than a factor of two compared to the serial case.")]),e._v(" "),t("h3",{attrs:{id:"leakage-current"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#leakage-current"}},[e._v("#")]),e._v(" Leakage current")]),e._v(" "),t("p",[e._v("As noted, leakage current, the source of static power consumption, is a combination of subthreshold and gate-oxide leakage: Ileak = Isub + Iox.")]),e._v(" "),t("h4",{attrs:{id:"subthreshold-power-leakage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#subthreshold-power-leakage"}},[e._v("#")]),e._v(" Subthreshold power leakage")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/user-attachments/assets/2b4d9239-44c8-4d18-8ea1-0940729496e7",alt:"image"}})]),e._v(" "),t("p",[e._v("How to reduce Isub")]),e._v(" "),t("ul",[t("li",[e._v("First, we could turn off the supply voltage—that is, set V to zero so that the factor in parentheses also becomes zero.")]),e._v(" "),t("li",[e._v("Second, we could increase the threshold voltage, which—because it appears as a negative exponent—can have a dramatic effect in even small increments. On the other hand, we know from Equation 1 that increasing Vth will "),t("strong",[e._v("reduce speed")]),e._v(".")])]),e._v(" "),t("p",[e._v("The problem with the first approach is loss of state;")]),e._v(" "),t("p",[e._v("The problem with the second approach is the loss of performance.")]),e._v(" "),t("p",[e._v("Gate width W is the other contributor to subthreshold leakage in a particular transistor. Designers often use the combined widths of all the processor’s transistors as a convenient measure of total subthreshold leakage.")]),e._v(" "),t("h4",{attrs:{id:"gate-oxide-power-leakage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gate-oxide-power-leakage"}},[e._v("#")]),e._v(" Gate-oxide power leakage")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/user-attachments/assets/f3bffb05-87b1-4dd3-8fc2-a3e4c109496c",alt:"image"}})]),e._v(" "),t("p",[e._v("K2 and α are experimentally derived. The term of interest is oxide thickness, Tox.")]),e._v(" "),t("p",[e._v("Tox will reduce gate leakage. Unfortunately, it also degrades the transistor’s effectiveness because Tox must decrease proportionally with process scaling to avoid short channel effects.")]),e._v(" "),t("h4",{attrs:{id:"low-power-architectural-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#low-power-architectural-options"}},[e._v("#")]),e._v(" Low-power architectural options")]),e._v(" "),t("p",[e._v("Because subthreshold and oxide leakage both depend on total gate width or, approximately, gate count.")]),e._v(" "),t("p",[e._v("Pipelined implementations can run at a lower voltage, which can reduce power consumption for both dynamic and static power compared to the serial case.")]),e._v(" "),t("p",[e._v("Parallel implementations can also run at a lower voltage, but only by roughly doubling the amount of hardware.")]),e._v(" "),t("h2",{attrs:{id:"reducing-static-power-consumption"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reducing-static-power-consumption"}},[e._v("#")]),e._v(" REDUCING STATIC POWER CONSUMPTION")]),e._v(" "),t("h3",{attrs:{id:"retention-flip-flops"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#retention-flip-flops"}},[e._v("#")]),e._v(" Retention flip-flops")]),e._v(" "),t("p",[e._v("For shorter inactive periods, researchers have developed “balloon” logic, also called retention flip-flops. The idea is to use highVth latches to duplicate those latches that must preserve state.")]),e._v(" "),t("p",[e._v("Using doping techniques or applying a bias voltage to the substrate can increase threshold voltage by 100 mV. This in turn reduces leakage by a factor of about 10, but it increases switching time by about 15 percent.")]),e._v(" "),t("p",[e._v("Thus, lowleakage retention flops are only useful in saving state energy efficiently—their use on the processor’s critical path would slow it down.")]),e._v(" "),t("h3",{attrs:{id:"controlling-memory-leakage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controlling-memory-leakage"}},[e._v("#")]),e._v(" Controlling memory leakage")]),e._v(" "),t("p",[e._v("In fact, leakage is projected to account for 70 percent of the cache power budget in 70-nm technology.")]),e._v(" "),t("p",[e._v("Both bitline and cell leakage result from subthreshold conduction—current flowing from the source to drain even when gate-source voltage is below the threshold voltage.\n"),t("img",{attrs:{src:"https://github.com/user-attachments/assets/666d6547-e73b-40e1-b630-a1da1308c0ba",alt:"image"}})]),e._v(" "),t("h4",{attrs:{id:"circuit-techniques"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#circuit-techniques"}},[e._v("#")]),e._v(" Circuit techniques.")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("State-destructive")])]),e._v(" "),t("li",[t("p",[e._v("State-preserving techniques vary. Drowsy caches multiplex supply voltages according to the state of each cache line or block. Waking up the drowsy cache lines is treated as a pseudo cache miss and incurs one additional cycle overhead.")]),e._v(" "),t("p",[e._v("Moreover, while state-preserving techniques can only reduce leakage by about a factor of 10, compared to more than a factor of 1,000 for destructive techniques, the net difference in power consumed by the two techniques is less than 10 percent.")])])]),e._v(" "),t("h4",{attrs:{id:"control-techniques"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#control-techniques"}},[e._v("#")]),e._v(" Control techniques.")]),e._v(" "),t("ul",[t("li",[e._v("application-sensitive controls, based on runtime performance feedback,9,13 and")]),e._v(" "),t("li",[e._v("application-insensitive controls, which periodically turn off cache lines.")])]),e._v(" "),t("h4",{attrs:{id:"compiler-techniques"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compiler-techniques"}},[e._v("#")]),e._v(" Compiler techniques")]),e._v(" "),t("ul",[t("li",[e._v("Using compiler directives might make it possible to keep some loops within bank boundaries.")]),e._v(" "),t("li",[e._v("The compiler can also provide application-sensitive leakage control.")])]),e._v(" "),t("h2",{attrs:{id:"technology-trends-and-challenges"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#technology-trends-and-challenges"}},[e._v("#")]),e._v(" TECHNOLOGY TRENDS AND CHALLENGES")]),e._v(" "),t("p",[e._v("One approach to reducing subthreshold leakage is to actively refrigerate the chip.")]),e._v(" "),t("p",[e._v("While this option seems promising for controlling the subthreshold leakage point, it does not address gateoxide leakage.\n"),t("img",{attrs:{src:"https://github.com/user-attachments/assets/f710d53d-247c-430e-8f93-8ac7bd654672",alt:"image"}})]),e._v(" "),t("p",[e._v("Designers assign a low threshold voltage to a few performance-critical transistors and a high threshold voltage to the majority of less timing-critical transistors.")]),e._v(" "),t("p",[e._v("This approach incurs a high subthreshold leakage current for the performance-critical transistors, but it can significantly reduce the overall leakage.")]),e._v(" "),t("p",[e._v("future technologies are likely to offer three threshold voltages—low, high, and extra high—or even more.")]),e._v(" "),t("p",[e._v("This opens the way to new leakage optimizations within different portions of a cache or at different levels of its hierarchy.")]),e._v(" "),t("p",[e._v("the address-decoder and bus-driver circuits in a cache consume a significant portion of total access time, so a designer could construct them from high-Vth transistors, while constructing the more numerous bit cells from extra-high-Vth devices and reserving low-Vth devices for speed-critical parts of the processor core.")]),e._v(" "),t("h3",{attrs:{id:"multiple-threshold-voltages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#multiple-threshold-voltages"}},[e._v("#")]),e._v(" Multiple threshold voltages")]),e._v(" "),t("h3",{attrs:{id:"gate-length"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gate-length"}},[e._v("#")]),e._v(" Gate length")]),e._v(" "),t("h3",{attrs:{id:"oxide-tunneling"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oxide-tunneling"}},[e._v("#")]),e._v(" Oxide tunneling")])])}),[],!1,null,null,null);t.default=o.exports}}]);