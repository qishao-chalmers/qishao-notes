(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{563:function(s,a,e){"use strict";e.r(a);var n=e(8),t=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("malloc")]),s._v(" "),a("p",[a("strong",[s._v("1 brk and mmap")]),s._v(" "),a("br"),s._v("\nhttps://people.kth.se/~johanmon/courses/id2206/lectures/management-handout.pdf"),a("br")]),s._v(" "),a("p",[s._v("Malloc will invoke brk or mmap systemcall. The difference is based on "),a("br"),s._v(" "),a("strong",[s._v("Focus on Size")]),s._v(":")]),s._v(" "),a("p",[s._v("The primary factor influencing malloc's choice is the requested memory size."),a("br"),s._v(" "),a("em",[a("strong",[s._v("brk for Smaller Allocations:")])]),s._v(" "),a("br"),s._v("\nFor smaller allocations (often configurable through a threshold), malloc will likely use brk.\nbrk is a system call that adjusts the program's data segment boundary. It's a relatively fast operation for requesting contiguous memory from the heap.")]),s._v(" "),a("p",[a("em",[a("strong",[s._v("mmap for Larger Allocations:")])]),s._v(" "),a("br"),s._v("\nWhen the requested memory size exceeds a certain threshold (often set by mallopt function), malloc might use mmap instead.")]),s._v(" "),a("p",[a("strong",[s._v("2. Memory.")]),s._v(" "),a("br"),s._v(" "),a("img",{attrs:{src:"https://github.com/hitqshao/qishao-notes/assets/23403286/acd3aa40-4b1f-44f0-b6ff-0cf7e2bcb4c1",alt:"image"}})]),s._v(" "),a("p",[s._v("Every time you call sbrk，it will increase the brk.")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/hitqshao/qishao-notes/assets/23403286/fe2ece46-71e2-4e40-9d5b-ccb267e5c431",alt:"94B8A6B8E7A91EAB15E66AC23902F25D"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/hitqshao/qishao-notes/assets/23403286/1e72d7c4-e171-45a4-a926-bcbe6b2fb9b9",alt:"image"}})]),s._v(" "),a("p",[a("strong",[s._v("3. Code, Lib, Systemcall")]),s._v(" "),a("br"),s._v(" "),a("img",{attrs:{src:"https://github.com/hitqshao/qishao-notes/assets/23403286/eceefb6c-92d4-4a66-a866-6b4817f6435c",alt:"image"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/hitqshao/qishao-notes/assets/23403286/8508e0fb-c212-40fe-8b35-a598b092bc4e",alt:"image"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/hitqshao/qishao-notes/assets/23403286/388fbf38-ec8e-4955-b59e-796c39ea03db",alt:"image"}})]),s._v(" "),a("p",[a("strong",[s._v("4. The Object in memory is organized by metadata and then data.")]),s._v(" "),a("br"),s._v("\nThe metadata is size and bit."),a("br")]),s._v(" "),a("p",[s._v("The metadata is aligned by 16Byte. ------- This needs to be proved.")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/hitqshao/qishao-notes/assets/23403286/744fd5a1-2fd1-4ec3-8365-6a870506e266",alt:"image"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/hitqshao/qishao-notes/assets/23403286/79454d34-e537-4e1d-9c37-7059ce6824d6",alt:"image"}})]),s._v(" "),a("p",[a("strong",[s._v("5. Create Hooks for malloc.")]),s._v(" "),a("br"),s._v("\nhttps://www.gnu.org/software/libc/manual/html_node/Hooks-for-Malloc.html")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/* Prototypes for __malloc_hook, __free_hook */\n#include <malloc.h>\n\n/* Prototypes for our hooks.  */\nstatic void my_init_hook (void);\nstatic void *my_malloc_hook (size_t, const void *);\nstatic void my_free_hook (void*, const void *);\n\nstatic void\nmy_init (void)\n{\n  old_malloc_hook = __malloc_hook;\n  old_free_hook = __free_hook;\n  __malloc_hook = my_malloc_hook;\n  __free_hook = my_free_hook;\n}\n\nstatic void *\nmy_malloc_hook (size_t size, const void *caller)\n{\n  void *result;\n  /* Restore all old hooks */\n  __malloc_hook = old_malloc_hook;\n  __free_hook = old_free_hook;\n  /* Call recursively */\n  result = malloc (size);\n  /* Save underlying hooks */\n  old_malloc_hook = __malloc_hook;\n  old_free_hook = __free_hook;\n  /* printf might call malloc, so protect it too. */\n  printf ("malloc (%u) returns %p\\n", (unsigned int) size, result);\n  /* Restore our own hooks */\n  __malloc_hook = my_malloc_hook;\n  __free_hook = my_free_hook;\n  return result;\n}\n\nstatic void\nmy_free_hook (void *ptr, const void *caller)\n{\n  /* Restore all old hooks */\n  __malloc_hook = old_malloc_hook;\n  __free_hook = old_free_hook;\n  /* Call recursively */\n  free (ptr);\n  /* Save underlying hooks */\n  old_malloc_hook = __malloc_hook;\n  old_free_hook = __free_hook;\n  /* printf might call free, so protect it too. */\n  printf ("freed pointer %p\\n", ptr);\n  /* Restore our own hooks */\n  __malloc_hook = my_malloc_hook;\n  __free_hook = my_free_hook;\n}\n\nmain ()\n{\n  my_init ();\n  …\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br")])]),a("p",[a("strong",[s._v("6. CppCon 2017 Memory Alloc”")])]),s._v(" "),a("p",[s._v("CppCon 2017: John Lakos “Local ('Arena') Memory Allocators (part 1 of 2)”")])])}),[],!1,null,null,null);a.default=t.exports}}]);